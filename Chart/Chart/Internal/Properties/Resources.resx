<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnchorPanel_AnchorMargin_ValueMustBeInRange0To1000" xml:space="preserve">
    <value>AnchorMargin value must be in range from 0 to 1000.</value>
  </data>
  <data name="AnchorPanel_MaximumMovingDistance_ValueMustBeInRange0To1000" xml:space="preserve">
    <value>MaximumMovingDistance value must be in range from 0 to 1000.</value>
  </data>
  <data name="AnchorPanel_MinimumMovingDistance_ValueMustBeInRange0To1000" xml:space="preserve">
    <value>MinimumMovingDistance value must be in range from 0 to 1000.</value>
  </data>
  <data name="AnchorPanel_MovingStep_ValueMustBeInRange1To1000" xml:space="preserve">
    <value>MovingStep value must be in range from 1 to 1000.</value>
  </data>
  <data name="Automation_ChartAreaClassName" xml:space="preserve">
    <value>Chart Area</value>
  </data>
  <data name="Automation_DataPointClassName" xml:space="preserve">
    <value>Data Point</value>
  </data>
  <data name="Automation_SeriesClassName" xml:space="preserve">
    <value>Chart Series</value>
  </data>
  <data name="AxisCannotPlotValuesOfType" xml:space="preserve">
    <value>Axis '{0}' cannot plot values of type '{1}'.</value>
  </data>
  <data name="AxisUncompatibleOrientation" xml:space="preserve">
    <value>Axis '{0}' has uncompatible orientation with series '{1}'.</value>
  </data>
  <data name="Axis_GetLength_CannotDetermineTheLengthOfAnAxisWithAnOrientationOfNone" xml:space="preserve">
    <value>Cannot determine the size of an axis without an orientation.</value>
  </data>
  <data name="CategoryScale_ItemSourceCannotBeSetWithTheCustomTreeSource" xml:space="preserve">
    <value>ItemSource cannot be assigned when the custom TreeSource is used.</value>
  </data>
  <data name="CategoryScale_SetContentBindingBeforeSettingItemSource" xml:space="preserve">
    <value>Set the CategoryScale.ContentBinding before setting the ItemSource.</value>
  </data>
  <data name="CategoryScale_SetKeyBindingBeforeSettingItemSource" xml:space="preserve">
    <value>Set the CategoryScale.KeyBinding before setting the ItemSource.</value>
  </data>
  <data name="CategoryScale_VirtuizationHelperMustBeSetBeforeItemSource" xml:space="preserve">
    <value>The VirtualizationHelper must be set before the ItemSource.</value>
  </data>
  <data name="ChartAreaAxesCollection_InvalidAttemptToRemovePermanentAxis" xml:space="preserve">
    <value>Permanent axes cannot be removed from the collection.</value>
  </data>
  <data name="ChartAreaAxesCollection_RemoveItem_AxisCannotBeRemovedWhenOneOrMoreSeriesAreListeningToIt" xml:space="preserve">
    <value>An axis cannot be removed from a series host when one or more hosted series is listening to it.</value>
  </data>
  <data name="Chart_Axes_SetterNotSupported" xml:space="preserve">
    <value>Axes collection setter is not supported.</value>
  </data>
  <data name="DataPointDetailsScreenReaderContent" xml:space="preserve">
    <value>DataPoint details</value>
  </data>
  <data name="DataPointHighlightedScreenReaderContent" xml:space="preserve">
    <value>DataPoint is highlighted</value>
  </data>
  <data name="DataPointSeriesCannotBeChanged" xml:space="preserve">
    <value>Data Point series cannot be changed.</value>
  </data>
  <data name="DateTimeScale_DayLabelFormat" xml:space="preserve">
    <value>MMM dd</value>
  </data>
  <data name="DateTimeScale_HourLabelFormat" xml:space="preserve">
    <value>MMM dd, htt</value>
  </data>
  <data name="DateTimeScale_MillisecondLabelFormat" xml:space="preserve">
    <value>hh:mm:ss.fff tt</value>
  </data>
  <data name="DateTimeScale_MinuteLabelFormat" xml:space="preserve">
    <value>hh:mm tt</value>
  </data>
  <data name="DateTimeScale_MonthLabelFormat" xml:space="preserve">
    <value>MMM yyyy</value>
  </data>
  <data name="DateTimeScale_SecondLabelFormat" xml:space="preserve">
    <value>T</value>
  </data>
  <data name="DateTimeScale_WeekLabelFormat" xml:space="preserve">
    <value>MMM dd</value>
  </data>
  <data name="DateTimeScale_YearLabelFormat" xml:space="preserve">
    <value>yyyy</value>
  </data>
  <data name="EdgePanel_OnEdgePropertyChanged" xml:space="preserve">
    <value>Attempt to set Edge property to an invalid value.</value>
  </data>
  <data name="LogarithmicScale_CrossingPositionOutOfRange" xml:space="preserve">
    <value>Logarithmic scale's CrossingPosition must be a positive number.</value>
  </data>
  <data name="LogarithmicScale_DataRangeOutOfRange" xml:space="preserve">
    <value>Logarithmic scale's DataRange must have positive Minimum and Maximum.</value>
  </data>
  <data name="LogarithmicScale_LogarithmicBaseOutOfRange" xml:space="preserve">
    <value>Logarithmic base must be a positive number greater than 1.</value>
  </data>
  <data name="LogarithmicScale_MaximumOutOfRange" xml:space="preserve">
    <value>Logarithmic scale's Maximum must be a positive number.</value>
  </data>
  <data name="LogarithmicScale_MinimumOutOfRange" xml:space="preserve">
    <value>Logarithmic scale's Minimum must be a positive number. </value>
  </data>
  <data name="LogarithmicScale_ViewMaximumOutOfRange" xml:space="preserve">
    <value>Logarithmic scale's ViewMaximum must be a positive number.</value>
  </data>
  <data name="LogarithmicScale_ViewMinimumOutOfRange" xml:space="preserve">
    <value>Logarithmic scale's ViewMinimum must be a positive number.</value>
  </data>
  <data name="Marker_size_must_be_a_positive_number" xml:space="preserve">
    <value>Marker size must be a positive number.</value>
  </data>
  <data name="PlayAxisPlayButtonScreenReaderContent" xml:space="preserve">
    <value>Play axis play</value>
  </data>
  <data name="Scale_DataValueTypeOutOfRange" xml:space="preserve">
    <value>The data value type is not supported by the scale.</value>
  </data>
  <data name="Scale_ViewRangeIsEmpty" xml:space="preserve">
    <value>Provided view range is empty ({0}-{1}).</value>
  </data>
  <data name="Scale_ViewRangeIsReverse" xml:space="preserve">
    <value>Provided view range has a Minimum is greater than Maximum ({0}-{1}).</value>
  </data>
  <data name="SeriesScreenReaderLabel" xml:space="preserve">
    <value>Series is {0}</value>
  </data>
  <data name="Series_overlap_must_be_in_range_from_Minus1_to_1" xml:space="preserve">
    <value>Series overlap must be in range from -1 to 1.</value>
  </data>
  <data name="Series_point_gap_width_must_be_in_range_from_0_to_1" xml:space="preserve">
    <value>Series point gap width must be in range from 0 to 1.</value>
  </data>
  <data name="Series_point_width_must_be_a_positive_number" xml:space="preserve">
    <value>Series point pixel width must be a positive number.</value>
  </data>
  <data name="TheStrokeThicknessPropertyValueCannotBeANegativeNumber" xml:space="preserve">
    <value>The StrokeThickness property value can not be a negative number.</value>
  </data>
</root>